<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WangShushu Blog</title>
    <description>A blog about lorem ipsum dolor sit amet</description>
    <link>https://neighborwangshushu.github.io/</link>
    <atom:link href="https://neighborwangshushu.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 04 Jul 2016 10:18:16 +0800</pubDate>
    <lastBuildDate>Mon, 04 Jul 2016 10:18:16 +0800</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>GitHub的使用</title>
        <description>&lt;p&gt;打开github注册账号
注册并登录之后点击右上角的加号选择new repository创建项目仓库&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-3f8e2523cc8c56af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;new repository&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在根据图片中的样式添加信息
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-6aa3f09a01a1b6bc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;添加信息&quot; /&gt;&lt;/p&gt;

&lt;p&gt;创建成功后显示这个界面&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-ff48bd2128750054.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;创建成功&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在图片中的位置上选择方式(有https和ssh两种),并将后面的链接复制&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-e037efd00dce9b56.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;选择方式&quot; /&gt;&lt;/p&gt;

&lt;p&gt;随便打开一个工程,打开Xcode的Account,点击左下角添加一个repositories&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-78d012c78b3718f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Add repositories&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在弹出的窗口中添加信息(第一个是我们复制的链接,第4个和第5个是你的用户账号和密码)然后Add
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-1409e61a708a5b19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Add&quot; /&gt;&lt;/p&gt;

&lt;p&gt;重新打开Xcode,点击下面的Check out选项&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-e1ea35a55d84788a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;重新打开Xcode&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择刚刚创建的git项目,然后点next
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-b48ecc87d32c49ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;选中git项目&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择你想要添加git本地仓库的路径
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-73da062f1507788e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;选择路径&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后就是等待,因为是下载国外的东西会很慢&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-08f021ef15c941c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;download&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下载完成之后自动跳到文件目录
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-435dcabbf85f26a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;文件目录&quot; /&gt;&lt;/p&gt;

&lt;p&gt;之后创建一个项目将项目路径放入本地的git文件目录下,在项目中点击顶部的Source Control,点击该目录下的push选项
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-012e7991c6b61c5e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Source Control&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击push之后会出现这个窗口直接点击push
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-8b623ca03e12174f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;push&quot; /&gt;&lt;/p&gt;

&lt;p&gt;完成这些操作之后到github上就会看到你的项目上传了&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1520495-93ded3eb15b9e2e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;上传成功&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Apr 2016 22:39:50 +0800</pubDate>
        <link>https://neighborwangshushu.github.io/GitHub%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
        <guid isPermaLink="true">https://neighborwangshushu.github.io/GitHub%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
        
        <category>GitHub</category>
        
        <category>Git</category>
        
        
        <category>GitHub</category>
        
        <category>Git</category>
        
      </item>
    
      <item>
        <title>Git的简单使用</title>
        <description>&lt;h3 id=&quot;git&quot;&gt;一.什么是Git&lt;/h3&gt; &lt;p&gt;git 是一款开源的分布式版本管理工具,最初由Linus Torvalds创作,于2005年以GPL发布,最初目的是为了更好的管理Linux内核开发而设计.&lt;/p&gt; &lt;p&gt;git 最初的开发动力是来自于BitKeeper和Monotone,git最初只是作为一个可以被其他前端包装的后端而开发的,但后来git内核已经成熟到可以独立地用作版本控制,很多著名的软件都使用git进行版本控制.&lt;/p&gt; &lt;p&gt;现在世界上所有的分布式版本控制工具中，git是最快、最简单、最流行的&lt;/p&gt; &lt;p&gt;版本控制：集中式、分布式&lt;/p&gt; &lt;p&gt;集中式：集中式版本控制系统，版本库是集中存放在中央服务器的，而工作的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始干活，干完活了，再把自己的活推送给中央服务器。中央服务器就好比是一个图书管，你要改一本书，必须先从图书馆借出来，然后回到家自己改，改完了，再放回到图书馆。 缺点：必须得联网时才能工作，自己电脑上没有服务器，只能请求网上的服务器获得资源。(SVN)&lt;/p&gt; &lt;p&gt;分布式：分布式版本控制系统没有中央服务器，每一个电脑上都是一个完整的版本库，工作的时候都不需要联网当两个或者两个以上的人分别修改了不同的文件的时候，只需要把各自修改的内容推送给对方即可，可以互相看到对方的修改了。安全性高，只要有一台电脑没有坏，就能重新得到完整的版本库，不会跟集中式的一样，中央服务器炸了就什么都没有了。&lt;/p&gt; &lt;p&gt;git是一款开源的分布式版本控制工具，在世界上所有的分布式版本控制工具中，git是最快、最简单、最流行的&lt;/p&gt; &lt;p&gt;作者是Linux之父： Linus Benedict Torvalds 当初开发git仅仅是为了辅助Linux内核的发开(管理源代码)&lt;/p&gt; &lt;p&gt;国外非常普及，国内一般 越来越多的开源项目已经转移到git&lt;/p&gt; &lt;p&gt;显示隐藏文件(Mac OS)&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ defaults write com.apple.finder AppleShowAllFiles -bool true &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;ul&gt; &lt;li&gt;需要重启Finder&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;lt;/br&amp;gt;&lt;/p&gt; &lt;h3 id=&quot;section&quot;&gt;二. 个人开发(命令行)&lt;/h3&gt; &lt;p&gt;1.进入到工作目录中(就是你想要将git仓库创建的位置),初始化一个代码仓库&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git init &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;2.给这个git仓库配置一个用户名和邮箱&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git config user.name &quot;username&quot; $ git config user.email &quot;useremail@gmail.com&quot; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;3.初始化代码&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ touch main.m $ git add main.m &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;4.查看文件状态&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git status &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;ul&gt; &lt;li&gt;文件显示为红色:新添加的文件或者修改的文件在工作区中,没有被添加到暂缓区&lt;/li&gt; &lt;li&gt;文件显示为绿色:添加的文件已经添加到暂缓区中,这种状态下的文件就可以被提交到代码仓库中了&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;5.修改文件&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ open main.m &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;6.将工作区中的文件添加到暂缓区中&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git...</description>
        <pubDate>Fri, 22 Apr 2016 21:45:50 +0800</pubDate>
        <link>https://neighborwangshushu.github.io/Git%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link>
        <guid isPermaLink="true">https://neighborwangshushu.github.io/Git%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid>
        
        <category>Git</category>
        
        
        <category>Git</category>
        
      </item>
    
      <item>
        <title>cocoapods下载很慢的解决办法</title>
        <description>&lt;p&gt;我们喜欢用cocoapods下载第三方的类库到我们的项目中,但是我们会遇到下载这些第三方时总是要等待很长的时间,,我在网上找到了解决这个问题的办法&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pod install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;执行这行命令的时候下载的速度很慢,这是因为cocoapods的install和update的默认源是国外的源,所以速度很慢
我这里指的源跟之前在安装的时候更换的taobao的镜像不是一个概念,taobao的这个镜像是用在下载cocoapods时用到的,这个镜像在安装完cocoapods之后,两者就没有关系了
所以想要提高install和update的速度我这里提供了两个方法&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;方法一. 更换源&lt;/h3&gt;

&lt;p&gt;在终端中输入下面的命令更换源&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pod repo remove master
$ pod repo add master https://gitcafe.com/akuandev/Specs.git
$ pod repo update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果想用别的镜像的话也可以将第二条命令的镜像换成 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://git.oschina.net/akuandev/Specs.git&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;需要注意的是执行第二条命令的时候会很慢因为里面的东西有160M,所以慢慢等吧*&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在将镜像更换之后还没有结束,在每一个项目中创建的podfile文件的第一行都要填写下面这行source命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source &#39;http://git.oschina.net/akuandev/Specs.git&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;specs&quot;&gt;方法二.忽略升级specs库&lt;/h3&gt;

&lt;p&gt;在进行&lt;code class=&quot;highlighter-rouge&quot;&gt;pod install&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;pod update&lt;/code&gt;时候忽略升级specs库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pod install --verbose --no-repo-update
$ pod update --verbose --no-repo-update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果想跟深的了解详情请看这篇&lt;a href=&quot;http://akinliu.github.io/2014/05/03/cocoapods-specs-/&quot;&gt;博客&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Apr 2016 22:06:48 +0800</pubDate>
        <link>https://neighborwangshushu.github.io/cocoapods%E4%B8%8B%E8%BD%BD%E5%BE%88%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
        <guid isPermaLink="true">https://neighborwangshushu.github.io/cocoapods%E4%B8%8B%E8%BD%BD%E5%BE%88%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
        
        <category>GitHub</category>
        
        <category>Git</category>
        
        
        <category>Git</category>
        
      </item>
    
      <item>
        <title>iOS进阶——数据处理之文件读写</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;一、沙盒机制&lt;/h1&gt; &lt;p&gt;沙盒的概念：沙盒是每一个iOS应用程序都会自动创建的一个文件系统目录(文件夹)，而且沙盒还具有&lt;strong&gt;&lt;em&gt;独立、封闭、安全&lt;/em&gt;&lt;/strong&gt;的特点。&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;&lt;strong&gt;沙盒机制&lt;/strong&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;ol&gt; &lt;li&gt;iOS中的沙盒不仅仅是一个文件目录，TA其实更是一种安全体系&lt;/li&gt; &lt;li&gt;TA规定了应用程序只能在为该应用程序创建的文件夹（也就是沙盒）内访问文件，不可以访问其他沙盒内的内容（iOS已经部分开放访问）&lt;/li&gt; &lt;li&gt;所有的非代码文件都保存在沙盒中，图片、音频、视频、属性列表（plist）、sqlite数据库以及文本文件等。&lt;/li&gt; &lt;/ol&gt; &lt;/blockquote&gt; &lt;hr /&gt; &lt;p&gt;&lt;strong&gt;沙盒机制的特点&lt;/strong&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;ol&gt; &lt;li&gt;每个应用程序的活动范围都限定在自己的沙盒里&lt;/li&gt; &lt;li&gt;不能随意跨越自己的沙盒去访问别的应用程序沙盒的内容（iOS8已经部分开放访问）&lt;/li&gt; &lt;li&gt;应用程序想外请求或者接手数据都需要经过权限认证&lt;/li&gt; &lt;/ol&gt; &lt;/blockquote&gt; &lt;hr /&gt; &lt;p&gt;&lt;strong&gt;沙盒文件系统目录&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;获取某个模拟器下某个应用程序沙盒的所在位置 &amp;gt;/Users/用户名/Library/Developer/CoreSimulator/Devices/&lt;strong&gt;&lt;em&gt;6892D97C-37CD-4788-9EAF-DD65C0C5480C&lt;/em&gt;&lt;/strong&gt;/data/Containers/Data/Application/&lt;strong&gt;&lt;em&gt;85F0B633-0C22-4511-BCD8-3C531D9C9750&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;ul&gt; &lt;li&gt;PS1：上面的文件路径就是一个应用程序的沙盒所在位置，也就是沙盒的根目录&lt;/li&gt; &lt;li&gt;PS2：第一个粗体显示的路径是设备（模拟器）的路径，第二个粗体显示的路径表示这个应用程序沙盒的路径&lt;/li&gt; &lt;/ul&gt; &lt;/blockquote&gt; &lt;hr /&gt; &lt;p&gt;&lt;strong&gt;打开某个应用程序的沙盒&lt;/strong&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;三击&lt;/strong&gt;你的沙盒路径（选中区域前后有多余的文字，并不会干扰接下来的操作，Mac系统会自动识别其中的文件路径）&lt;/li&gt; &lt;li&gt;点击鼠标右键选择Services&lt;/li&gt; &lt;li&gt;在Services的子选项中选择Reveal in Finder&lt;/li&gt; &lt;/ol&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;ul&gt; &lt;li&gt;PS：连续点击三次鼠标左键，选中光标所在位置的行，双击选中光标所在位置的单词&lt;/li&gt; &lt;/ul&gt; &lt;/blockquote&gt; &lt;hr /&gt; &lt;p&gt;&lt;strong&gt;应用程序的沙盒目录&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;应用程序的沙盒目录下拥有三个很特殊的文件夹分别是Documents、Library（拥有Caches和Preferences目录）、tmp。&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;Documents&lt;/strong&gt;：保存应用程序运行时生成的需要持久化数据，iTunes会自动备份该目录 苹果公司建议将程序中建立的活在程序浏览到的文件数据保存在该目录下，iTunes备份和恢复的时候会包括此目录&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;Library&lt;/strong&gt;：存储程序的默认设置和其他状态信息，iTunes会自动备份该文件目录 &amp;gt;1. Library/Caches：存放缓存文件，iTunes不会备份此目录，此目录下文件不会在应用退出时删除，通常存放体积比较大，但并不是很重要的资源 &amp;gt;2. Library/Preferences：保存应用的所有偏好设置，iOS的Setting（设置）应用会在该目录中查找应用的设置信息，iTunes会自动备份该目录。——PS：如果你想对偏好设置进行相应的操作，应该使用NSUserDefaults类来取得和设置应用程序的偏好，而不是直接创建偏好设置文件&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;tmp&lt;/strong&gt;：保存应用程序运行时所需的临时数据，使用完毕后再将相应的文件从该目录删除，应用没有运行时，系统也有可能会清除该目录下的文件，iTunes不会同步该目录，你的iPhone重启时，该目录下的文件会被删除&lt;/p&gt; &lt;/blockquote&gt; &lt;hr /&gt; &lt;p&gt;获取沙盒内文件的路径&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;获取&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Documents&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;目录&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;docPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;NSSearchPathForDirectoriesInDomains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;NSDocumentDirectory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NSUserDomainMask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;...</description>
        <pubDate>Mon, 18 Apr 2016 09:52:22 +0800</pubDate>
        <link>https://neighborwangshushu.github.io/iOS%E8%BF%9B%E9%98%B6-%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E4%B9%8B%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/</link>
        <guid isPermaLink="true">https://neighborwangshushu.github.io/iOS%E8%BF%9B%E9%98%B6-%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E4%B9%8B%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/</guid>
        
        <category>iOS</category>
        
        <category>Objective-C</category>
        
        
        <category>iOS_Objective-C</category>
        
      </item>
    
      <item>
        <title>iOS进阶——SQLite数据库</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;一、数据库管理系统&lt;/h1&gt; &lt;p&gt;SQL语言概念 SQL是一种&lt;strong&gt;结构化查询语言&lt;/strong&gt;，TA是专为数据库建立的操作命令集，是一种功能齐全的&lt;strong&gt;数据库语言&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;常见的数据库语言： &lt;strong&gt;MySQL、Oracle&lt;/strong&gt;&lt;/li&gt; &lt;/ul&gt; &lt;hr /&gt; &lt;p&gt;数据库管理系统&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;数据库的特征：&lt;/p&gt; &lt;/blockquote&gt; &lt;ul&gt; &lt;li&gt;以一定方式存储在一起&lt;/li&gt; &lt;li&gt;能为多个用户共享&lt;/li&gt; &lt;li&gt;具有尽可能少的冗余代码&lt;/li&gt; &lt;li&gt;与程序彼此独立的数据集合&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;讲了这么多数据库相关的知识，那么到底什么是数据库呢 * &lt;strong&gt;数据库&lt;/strong&gt;（Database）是按照数据结构来组织、存储和管理数据的仓库&lt;/p&gt; &lt;p&gt;数据库的分类 &lt;strong&gt;关系型数据库（主流）&lt;/strong&gt;、对象数据库、层次式数据库&lt;/p&gt; &lt;p&gt;常用关系型数据库 PC端：Oracle、MySQL、SQL Server、Access、DB2、Sybase &lt;strong&gt;嵌入式\移动客户端：SQLite&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;SQLite是一个轻量级的&lt;strong&gt;关系数据库&lt;/strong&gt;。SQLite最初的设计目标是用于嵌入式系统，TA占用资源非常少，在嵌入式设备中，只需要几百K的内存就够了，目前应用于Android、iOS、Windows Phone等智能手机。iOS使用时SQLite，只需要加入libsqlite3.0.tbd依赖以及引入sqlite3.h头文件即可&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;&lt;strong&gt;数据库中有几个很重要的概念&lt;/strong&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;表：是数据库中一个非常重要的对象，是其他对象的基础。根据信息的分类情况，一个数据库中可能包含若干个数据表&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;字段：表的“列”称为“字段”，每个字段包含某一专题的信息&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;记录：是指对应于数据表中一行信息的一组完整的相关信息&lt;/p&gt; &lt;/blockquote&gt; &lt;hr /&gt; &lt;blockquote&gt; &lt;p&gt;SQL中很重要的一点，一定要记住，&lt;strong&gt;&lt;em&gt;SQL对大小写不敏感&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;hr /&gt; &lt;p&gt;SQL语句后面的分号&lt;/p&gt; &lt;p&gt;在数据库系统中分号是作为分隔每条SQL语句的标准方法，这样就可以在对服务器的相同请求中执行一条以上的语句 需要我们注意的是，某些数据库会有要求在每条SQL命令的末尾加上分号，而SQLite则属于另一类，TA的语句末尾&lt;strong&gt;不使用分号&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;PS：在我们学习Objective-C时每段语句的末尾都要求加上分号，但是SQLite不需要我们要区分开来&lt;/li&gt; &lt;/ul&gt; &lt;hr /&gt; &lt;p&gt;SQLite数据库数据类型 SQLite是无类型的数据库，可以保存任何类型的数据，对于SQLite来说对字段不指定类型是完全有效的 为了使SQLite和其他数据库间的兼容性最大化，SQLite支持“类型近似”的观点，列的类型近似指的是存储列上数据的推荐类型。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;SQLite近似类型规则&lt;/strong&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;ol&gt; &lt;li&gt;如果类型字符串中包含“int”，那么该字段的亲缘类型是INTEGER&lt;/li&gt; &lt;li&gt;如果类型字符串中包含“char”、“clob”或“text”，那么该字段的亲缘类型是TEXT，如VARCHAR&lt;/li&gt; &lt;li&gt;如果类型字符串中包含“blob”，那么该字段的亲缘类型是none&lt;/li&gt; &lt;li&gt;如果类型字符串中包含“real”、“floa”或“doub”，那么该字段的亲缘类型是real&lt;/li&gt; &lt;li&gt;其余情况下，字段的亲缘类型为NUMERIC&lt;/li&gt; &lt;/ol&gt; &lt;/blockquote&gt; &lt;hr /&gt; &lt;p&gt;SQLite字段约束条件&lt;/p&gt; &lt;ul&gt; &lt;li&gt;not null - 非空&lt;/li&gt; &lt;li&gt;unique - 唯一&lt;/li&gt; &lt;li&gt;primary key - 主键&lt;/li&gt; &lt;li&gt;foreign key - 外键&lt;/li&gt; &lt;li&gt;check - 条件检查，确保一列中的所有值满足一定条件&lt;/li&gt; &lt;li&gt;default - 默认&lt;/li&gt; &lt;li&gt;autoincreatement - 自增型变量&lt;/li&gt; &lt;/ul&gt;...</description>
        <pubDate>Fri, 01 Apr 2016 10:08:13 +0800</pubDate>
        <link>https://neighborwangshushu.github.io/iOS%E8%BF%9B%E9%98%B6-SQLite%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
        <guid isPermaLink="true">https://neighborwangshushu.github.io/iOS%E8%BF%9B%E9%98%B6-SQLite%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
        
        <category>iOS</category>
        
        <category>Objective-C</category>
        
        
        <category>iOS_Objective-C</category>
        
      </item>
    
      <item>
        <title>iOS_UI(十五)UICollectionView</title>
        <description>&lt;p&gt;集合视图的创建必须指定布局，如果没有布局，则显示不了任何东西，所以在创建集合视图对象之前必须先创建一个布局对象&lt;/p&gt; &lt;p&gt;采用系统布局类UICollectViewLayout(布局基类)&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;UICollectionViewFlowLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UICollectionViewFlowLayout&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt; &lt;p&gt;设置布局对象的相关属性&lt;/p&gt; &lt;p&gt;设置最小的行间距(默认是10)layout.minimumLineSpacing = 20;&lt;/p&gt; &lt;p&gt;设置item与item之间的间距layout.minimumInteritemSpacing = 10;&lt;/p&gt; &lt;p&gt;设置每个item的尺寸大小layout.itemSize = CGSizeMake((kWidth - 45) / 3, 100);&lt;/p&gt; &lt;p&gt;设置集合视图的分区间隔(上，左，下，右)layout.sectionInset = UIEdgeInsetsMake(10, 10, 10, 10);&lt;/p&gt; &lt;p&gt;设置集合视图的滑动方向layout.scrollDirection=UICollectionViewScrollDirectionVertical;//竖向滚动&lt;/p&gt; &lt;p&gt;创建集合视图&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;UICollectionView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collectionView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UICollectionView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initWithFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UIScreen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mainScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bounds&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collectionViewLayout&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt; &lt;p&gt;集合视图想要显示内容，必须将cell进行注册&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collectionView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registerClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UICollectionViewCell&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forCellWithReuseIdentifier&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt; &lt;p&gt;集合视图包含以下代理&lt;/p&gt; &lt;p&gt;UICollectionViewDataSource 数据源协议&lt;/p&gt; &lt;p&gt;UICollectionViewDelegate 代理协议 （其中的方法与UITableView的代理协议相似）&lt;/p&gt; &lt;p&gt;布局包含的代理&lt;/p&gt; &lt;p&gt;UICollectionViewDelegateFlowLayout&lt;/p&gt; &lt;p&gt;UICollectionViewDataSource协议包含的方法（前两个必须实现）&lt;/p&gt; &lt;p&gt;//设置每个分区包含的item个数&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;...</description>
        <pubDate>Thu, 10 Mar 2016 22:00:13 +0800</pubDate>
        <link>https://neighborwangshushu.github.io/iOS_UI(%E5%8D%81%E4%BA%94)UICollectionView/</link>
        <guid isPermaLink="true">https://neighborwangshushu.github.io/iOS_UI(%E5%8D%81%E4%BA%94)UICollectionView/</guid>
        
        <category>iOS</category>
        
        <category>UI</category>
        
        <category>Objective-C</category>
        
        
        <category>iOS_Objective-C</category>
        
      </item>
    
      <item>
        <title>iOS_UI(十四)可视化编程</title>
        <description>&lt;ul&gt; &lt;li&gt;当storyboard中的视图控制器通过segue完成页面跳转时，此方法就会被执行&lt;/li&gt; &lt;/ul&gt; &lt;hr /&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prepareForSegue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UIStoryboardSegue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;segue&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;segue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;identifierisEqualToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;secondVC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SecondViewController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secondVC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;segue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;destinationViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondVC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;usernameTf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt; &lt;ul&gt; &lt;li&gt;segue有三个非常重要的属性&lt;/li&gt; &lt;/ul&gt; &lt;blockquote&gt; &lt;p&gt;1.identifier，标识符，标识区分线（segue），可以选择性的跳转&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;2.sourceViewController，源视图控制器&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;3.destinationViewController，目标视图控制器&lt;/p&gt; &lt;/blockquote&gt; &lt;hr /&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;IBAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;regist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UIButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span...</description>
        <pubDate>Thu, 10 Mar 2016 00:23:33 +0800</pubDate>
        <link>https://neighborwangshushu.github.io/iOS_UI(%E5%8D%81%E5%9B%9B)%E5%8F%AF%E8%A7%86%E5%8C%96%E7%BC%96%E7%A8%8B/</link>
        <guid isPermaLink="true">https://neighborwangshushu.github.io/iOS_UI(%E5%8D%81%E5%9B%9B)%E5%8F%AF%E8%A7%86%E5%8C%96%E7%BC%96%E7%A8%8B/</guid>
        
        <category>iOS</category>
        
        <category>UI</category>
        
        <category>Objective-C</category>
        
        
        <category>iOS_Objective-C</category>
        
      </item>
    
      <item>
        <title>iOS_UI(十三)XIB</title>
        <description>&lt;p&gt;代码获取使用XIB形成的视图&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;从&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mainBundle&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;包中加载同名的试图控制器文件，默认加载的是&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RootViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nib&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;文件参数可以写&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RootViewController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootVC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RootViewController&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initWithNibName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RootViewController&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;NSBundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mainBundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;如果使用&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;XIB&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;绘制&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的话，一定要注意表视图必须注册&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;类&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tableView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registerNib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UINib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nibWithNibName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MyTableViewCell&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;NSBundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mainBundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;forCellReuseIdentifier&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:kStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt; &lt;p&gt;自定义高度&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tableView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rowHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UITableViewAutomaticDimension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tableView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;estimatedRowHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;最大高度；&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span...</description>
        <pubDate>Tue, 08 Mar 2016 22:44:41 +0800</pubDate>
        <link>https://neighborwangshushu.github.io/iOS_UI(%E5%8D%81%E4%B8%89)XIB/</link>
        <guid isPermaLink="true">https://neighborwangshushu.github.io/iOS_UI(%E5%8D%81%E4%B8%89)XIB/</guid>
        
        <category>iOS</category>
        
        <category>UI</category>
        
        <category>Objective-C</category>
        
        
        <category>iOS_Objective-C</category>
        
      </item>
    
      <item>
        <title>iOS_UI(十二)自定义Cell</title>
        <description>&lt;p&gt;自定义cell的步骤&lt;/p&gt;

&lt;p&gt;1.将cell所有要显示的子视图声明为属性(不能和cell自带子视图重名)&lt;/p&gt;

&lt;p&gt;2.重写cell的初始化方法,将子视图添加到self.contentView中，frame指定为0&lt;/p&gt;

&lt;p&gt;3.重写layoutSubviews方法，给定内部控件的具体位置&lt;/p&gt;

&lt;p&gt;4.导入模型头文件，在cell内部声明一个绑定模型属性&lt;/p&gt;

&lt;p&gt;5.重写模型的setter方法，给cell内部控件进行赋值&lt;/p&gt;

&lt;p&gt;6.内存管理&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Mar 2016 18:53:50 +0800</pubDate>
        <link>https://neighborwangshushu.github.io/iOS_UI(%E5%8D%81%E4%BA%8C)%E8%87%AA%E5%AE%9A%E4%B9%89Cell/</link>
        <guid isPermaLink="true">https://neighborwangshushu.github.io/iOS_UI(%E5%8D%81%E4%BA%8C)%E8%87%AA%E5%AE%9A%E4%B9%89Cell/</guid>
        
        <category>iOS</category>
        
        <category>UI</category>
        
        <category>Objective-C</category>
        
        
        <category>iOS_Objective-C</category>
        
      </item>
    
      <item>
        <title>iOS_UI(十一)UITableView添加、删除、移动cell</title>
        <description>&lt;p&gt;添加删除数据&lt;/p&gt; &lt;p&gt;1.让将要执行删除、添加操作的表视图处于编辑状态&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setEditing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;editing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animated&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;先执行父类中的这个方法&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;supersetEditing&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:editinganimated:animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;表视图执行此方法&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tableViewsetEditing&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:editinganimated:animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt; &lt;p&gt;2.指定表视图中哪些行可以处于编辑状态默认是所有行都可以编辑&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UITableView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;canEditRowAtIndexPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;NSIndexPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt; &lt;p&gt;3.指定编辑样式，到底是删除还是添加默认全部都是删除样式&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UITableViewCellEditingStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UITableView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;editingStyleForRowAtIndexPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;NSIndexPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexPath&lt;/span&gt;&lt;span...</description>
        <pubDate>Sat, 05 Mar 2016 19:22:18 +0800</pubDate>
        <link>https://neighborwangshushu.github.io/iOS_UI(%E5%8D%81%E4%B8%80)UITableView%E6%B7%BB%E5%8A%A0-%E5%88%A0%E9%99%A4-%E7%A7%BB%E5%8A%A8cell/</link>
        <guid isPermaLink="true">https://neighborwangshushu.github.io/iOS_UI(%E5%8D%81%E4%B8%80)UITableView%E6%B7%BB%E5%8A%A0-%E5%88%A0%E9%99%A4-%E7%A7%BB%E5%8A%A8cell/</guid>
        
        <category>iOS</category>
        
        <category>UI</category>
        
        <category>Objective-C</category>
        
        
        <category>iOS_Objective-C</category>
        
      </item>
    
  </channel>
</rss>
